<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="NavAutomaticText.Content" xml:space="preserve">
    <value>Automatic</value>
  </data>
  <data name="NavTaskOrchestrationText.Content" xml:space="preserve">
    <value>Task Orchestration</value>
  </data>
  <data name="NavFiltersText.Content" xml:space="preserve">
    <value>Filters</value>
  </data>
  <data name="Backup" xml:space="preserve">
    <value>Backup</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="SettingsPageControl.ModuleTitle" xml:space="preserve">
    <value>Automatic</value>
  </data>
  <data name="SettingsPageControl.ModuleDescription" xml:space="preserve">
    <value>The automation module can monitor changes to files and folders. Based on custom settings and associated file processing tasks, this module can automatically perform the corresponding actions.</value>
  </data>
  <data name="StartupExecutionCard.Header" xml:space="preserve">
    <value>On startup</value>
  </data>
  <data name="StartupExecutionCard.Description" xml:space="preserve">
    <value>EasyTidy Execute once at startup</value>
  </data>
  <data name="RegularTaskRunningCard.Header" xml:space="preserve">
    <value>Regular execution</value>
  </data>
  <data name="ScheduledExecutionCard.Header" xml:space="preserve">
    <value>According to schedule</value>
  </data>
  <data name="FileChangeDelay.Text" xml:space="preserve">
    <value>Delay：</value>
  </data>
  <data name="FileChangeSecond.Text" xml:space="preserve">
    <value>Second</value>
  </data>
  <data name="AutoAnalysisGlobal.Header" xml:space="preserve">
    <value>AutoAnalysis(Global)</value>
  </data>
  <data name="FileChange.Description" xml:space="preserve">
    <value>Automatic file processing options</value>
  </data>
  <data name="FileChangeCard.Header" xml:space="preserve">
    <value>When files change</value>
  </data>
  <data name="RegularTaskRunningCard.Description" xml:space="preserve">
    <value>Regularly execute according to the set time</value>
  </data>
  <data name="ScheduledExecutionCard.Description" xml:space="preserve">
    <value>Perform periodic execution according to the set plan</value>
  </data>
  <data name="ConfigurationButton.Content" xml:space="preserve">
    <value>Configuration</value>
  </data>
  <data name="TaskAssociation.Header" xml:space="preserve">
    <value>Task association</value>
  </data>
  <data name="ConfigurationTask.Header" xml:space="preserve">
    <value>Configuration Task</value>
  </data>
  <data name="ConfigurationTask.Description" xml:space="preserve">
    <value>Associate tasks with automatic execution methods. The selected tasks will appear on the right side and will be associated after saving</value>
  </data>
  <data name="TaskSelection.Header" xml:space="preserve">
    <value>Task selection</value>
  </data>
  <data name="TaskButton.Content" xml:space="preserve">
    <value>Task force</value>
  </data>
  <data name="TaskGroup.Title" xml:space="preserve">
    <value>Select Task Group</value>
  </data>
  <data name="SingleTask.Content" xml:space="preserve">
    <value>Single Task</value>
  </data>
  <data name="SelectTask.Title" xml:space="preserve">
    <value>Select Task</value>
  </data>
  <data name="Separate.Content" xml:space="preserve">
    <value>Is it configured separately</value>
  </data>
  <data name="Customize.Content" xml:space="preserve">
    <value>Customize</value>
  </data>
  <data name="ResetButton.Content" xml:space="preserve">
    <value>Revoke configuration</value>
  </data>
  <data name="SaveButton.Content" xml:space="preserve">
    <value>Save Configuration</value>
  </data>
  <data name="TaskList.Title" xml:space="preserve">
    <value>Task list</value>
  </data>
  <data name="FileChangeBlock.Text" xml:space="preserve">
    <value>When files change</value>
  </data>
  <data name="RegularTaskRunningText.Text" xml:space="preserve">
    <value>Regular execution</value>
  </data>
  <data name="SelectTaskBlock.Text" xml:space="preserve">
    <value>Task selection：</value>
  </data>
  <data name="ScheduleText" xml:space="preserve">
    <value>schedule</value>
  </data>
  <data name="UpdateBlock.Text" xml:space="preserve">
    <value>Last Update Check</value>
  </data>
  <data name="CheckButton.Content" xml:space="preserve">
    <value>Check for New Version</value>
  </data>
  <data name="ReleaseNote.Content" xml:space="preserve">
    <value>Release Note</value>
  </data>
  <data name="DownloadButton.Content" xml:space="preserve">
    <value>Download Update</value>
  </data>
  <data name="CodeButton.Content" xml:space="preserve">
    <value>GitHub Repository</value>
  </data>
  <data name="LinkBlock.Text" xml:space="preserve">
    <value>Related Links</value>
  </data>
  <data name="AboutUsSetting.Description" xml:space="preserve">
    <value>EasyTidy can automatically process and organize files and folders. It can filter files by various conditions such as name and directory. Supports manual and automatic execution. You can set delay, time interval or customize the execution cycle with CRON expression for easy and efficient file management.</value>
    <comment>EasyTidy can automatically process and organize files and folders. It can filter files by various conditions such as name and directory. Supports manual and automatic execution. You can set delay, time interval or customize the execution cycle with CRON expression for easy and efficient file management.</comment>
  </data>
  <data name="ThemeSettingsCard.Description" xml:space="preserve">
    <value>Select the theme that suits your mood and preference. You can choose from dark, light, or system themes.</value>
  </data>
  <data name="ThemeSettingsCard.Header" xml:space="preserve">
    <value>App theme</value>
  </data>
  <data name="Light.Content" xml:space="preserve">
    <value>Light</value>
  </data>
  <data name="Dark.Content" xml:space="preserve">
    <value>Dark</value>
  </data>
  <data name="Default.Content" xml:space="preserve">
    <value>Windows Default</value>
    <comment>Default</comment>
  </data>
  <data name="ColorSettingsCard.Description" xml:space="preserve">
    <value>Sync your app’s color with your Windows accent color. You can open the Windows accent color setting by clicking this card.</value>
  </data>
  <data name="ColorSettingsCard.Header" xml:space="preserve">
    <value>Accent color</value>
  </data>
  <data name="FilterSettingsControl.ModuleDescription" xml:space="preserve">
    <value>Easily add files that need to be filtered to achieve precise management of specific files. By adding file processing rules, you can customize the way files are processed to meet individual needs. At the same time, you can also use the powerful pattern matching function of regular expressions to further refine the filtering and processing logic of files, making file management more efficient and intelligent. Whether you want to exclude specific types of files or perform special processing on files that match specific patterns, you can easily do it here.</value>
  </data>
  <data name="FilterSettingsControl.ModuleTitle" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="ThemeSettingPage_Description" xml:space="preserve">
    <value>Explore the different ways to customize the appearance and behavior of your app. You can change the material, theme, accent, and more options to suit your style and preference.</value>
  </data>
  <data name="ThemeSettingPage_Header" xml:space="preserve">
    <value>Behavior &amp; animation</value>
  </data>
  <data name="AppUpdateSetting_Description" xml:space="preserve">
    <value>Check for Updates</value>
  </data>
  <data name="AppUpdateSetting_Header" xml:space="preserve">
    <value>Check for Updates</value>
  </data>
  <data name="AboutUsSettingPage_Description" xml:space="preserve">
    <value>About EasyTidy and Developer</value>
  </data>
  <data name="AboutUsSettingPage_Header" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="LogsSettingsControl.ModuleDescription" xml:space="preserve">
    <value>EasyTidy is an open-source, professional file management tool designed to provide users with efficient and convenient file classification and organization solutions. Through custom settings, users can achieve various sorting methods such as automatic sorting, scheduled sorting, real-time sorting, and manual sorting to meet the file management needs in different scenarios. Used by the author ♥  make.</value>
  </data>
  <data name="LogsSettingsControl.ModuleTitle" xml:space="preserve">
    <value>Operation log</value>
  </data>
  <data name="AtLeastOneWord" xml:space="preserve">
    <value>At least one word</value>
  </data>
  <data name="YesStr" xml:space="preserve">
    <value>YES</value>
  </data>
  <data name="NoStr" xml:space="preserve">
    <value>NO</value>
  </data>
  <data name="AtLeastOneWordCaseSensitive" xml:space="preserve">
    <value>At least one word (case sensitive)</value>
  </data>
  <data name="AllWordsInAnyOrder" xml:space="preserve">
    <value>All words in a random order</value>
  </data>
  <data name="AllWordsInAnyOrderCaseSensitive" xml:space="preserve">
    <value>All words in arbitrary order (case sensitive)</value>
  </data>
  <data name="RegularExpression" xml:space="preserve">
    <value>regular expression</value>
  </data>
  <data name="StringText" xml:space="preserve">
    <value>String</value>
  </data>
  <data name="StringCaseSensitive" xml:space="preserve">
    <value>String (case sensitive)</value>
  </data>
  <data name="LocalBackText" xml:space="preserve">
    <value>Local backup</value>
  </data>
  <data name="WebDavText" xml:space="preserve">
    <value>WebDav</value>
  </data>
  <data name="SkipText" xml:space="preserve">
    <value>Skip</value>
  </data>
  <data name="OverrideText" xml:space="preserve">
    <value>Override</value>
  </data>
  <data name="OverwriteIfNewerText" xml:space="preserve">
    <value>Overwrite If Newer</value>
  </data>
  <data name="OverrideIfSizesDifferText" xml:space="preserve">
    <value>If the sizes are different, cover them</value>
  </data>
  <data name="ReNameAppendText" xml:space="preserve">
    <value>Rename(01)</value>
  </data>
  <data name="ReNameAddDateText" xml:space="preserve">
    <value>Rename - Current Date</value>
  </data>
  <data name="MoveText" xml:space="preserve">
    <value>Move</value>
  </data>
  <data name="CopyText" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="DeleteText" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="RenameText" xml:space="preserve">
    <value>Rename</value>
  </data>
  <data name="RecycleBinText" xml:space="preserve">
    <value>RecycleBin</value>
  </data>
  <data name="GreaterThanText" xml:space="preserve">
    <value>&gt;</value>
  </data>
  <data name="EqualToText" xml:space="preserve">
    <value>=</value>
  </data>
  <data name="LessThanText" xml:space="preserve">
    <value>&lt;</value>
  </data>
  <data name="ByteText" xml:space="preserve">
    <value>byte</value>
  </data>
  <data name="KilobyteText" xml:space="preserve">
    <value>KB</value>
  </data>
  <data name="MegabyteText" xml:space="preserve">
    <value>MB</value>
  </data>
  <data name="GigabyteText" xml:space="preserve">
    <value>GB</value>
  </data>
  <data name="SecondText" xml:space="preserve">
    <value>Second</value>
  </data>
  <data name="MinuteText" xml:space="preserve">
    <value>Minute</value>
  </data>
  <data name="HourText" xml:space="preserve">
    <value>Hour</value>
  </data>
  <data name="DayText" xml:space="preserve">
    <value>Day</value>
  </data>
  <data name="MonthText" xml:space="preserve">
    <value>Month</value>
  </data>
  <data name="YearText" xml:space="preserve">
    <value>Year</value>
  </data>
  <data name="AllText" xml:space="preserve">
    <value>ALL</value>
  </data>
  <data name="FileProcessing.Header" xml:space="preserve">
    <value>File processing</value>
  </data>
  <data name="FileProcessingCard.Header" xml:space="preserve">
    <value>Dealing with conflicts</value>
  </data>
  <data name="FileProcessingCard.Description" xml:space="preserve">
    <value>Options for automatic conflict resolution</value>
  </data>
  <data name="FileProcessingComboBox.PlaceholderText" xml:space="preserve">
    <value>Conflict handling methods</value>
  </data>
  <data name="ToastWithAvatarDescriptionText" xml:space="preserve">
    <value>Easytidy application is running</value>
  </data>
  <data name="RemindText" xml:space="preserve">
    <value>More reminder</value>
  </data>
  <data name="AddFilterSettingsCard.Header" xml:space="preserve">
    <value>Add filter</value>
  </data>
  <data name="AddFilterSettingsCard.Description" xml:space="preserve">
    <value>Add custom additional filters</value>
  </data>
  <data name="FilterButton.Content" xml:space="preserve">
    <value>Add filter</value>
  </data>
  <data name="FiltersListBlock.Text" xml:space="preserve">
    <value>Filter List</value>
  </data>
  <data name="AttributeBlock.Text" xml:space="preserve">
    <value>Attribute</value>
  </data>
  <data name="FilterNameBlock.Text" xml:space="preserve">
    <value>Filter Name</value>
  </data>
  <data name="FeaturesBlock.Text" xml:space="preserve">
    <value>Characteristics</value>
  </data>
  <data name="OtherBlock.Text" xml:space="preserve">
    <value>Other</value>
  </data>
  <data name="OperationBlock.Text" xml:space="preserve">
    <value>Operation</value>
  </data>
  <data name="EditButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="NavGeneralText.Content" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="DesktopText" xml:space="preserve">
    <value>Desktop</value>
  </data>
  <data name="ModifyText" xml:space="preserve">
    <value>Modify</value>
  </data>
  <data name="SaveText" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="CancelText" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="AdditionalText" xml:space="preserve">
    <value>Additional</value>
  </data>
  <data name="SaveSuccessfulText" xml:space="preserve">
    <value>Save Successful</value>
  </data>
  <data name="SaveFailedText" xml:space="preserve">
    <value>Save Failed</value>
  </data>
  <data name="CustomConfigurationText" xml:space="preserve">
    <value>Custom Configuration</value>
  </data>
  <data name="ModifySuccessfullyText" xml:space="preserve">
    <value>Modify Successfully</value>
  </data>
  <data name="ModificationFailedText" xml:space="preserve">
    <value>Modification Failed</value>
  </data>
  <data name="DeleteSuccessfulText" xml:space="preserve">
    <value>Delete Successful</value>
  </data>
  <data name="DeleteFailedText" xml:space="preserve">
    <value>Delete Failed</value>
  </data>
  <data name="ExecutionFailedText" xml:space="preserve">
    <value>Execution Failed</value>
  </data>
  <data name="DisabledSuccessfullyText" xml:space="preserve">
    <value>Operation succeeded</value>
  </data>
  <data name="DisablingFailedText" xml:space="preserve">
    <value>Operation failed</value>
  </data>
  <data name="DialogFilterNameBlock.Text" xml:space="preserve">
    <value>Filter Name:</value>
  </data>
  <data name="DividerAttribute.Content" xml:space="preserve">
    <value>Attribute</value>
  </data>
  <data name="DialogFileSize.Content" xml:space="preserve">
    <value>File Size:</value>
  </data>
  <data name="DialogCreationTime.Content" xml:space="preserve">
    <value>Creation Time:</value>
  </data>
  <data name="DialogModifyTime.Content" xml:space="preserve">
    <value>Modify Time:</value>
  </data>
  <data name="DialogVisitTime.Content" xml:space="preserve">
    <value>Visit Time:</value>
  </data>
  <data name="DialogDividerCharacteristics.Content" xml:space="preserve">
    <value>Characteristics</value>
  </data>
  <data name="DialogArchive.Content" xml:space="preserve">
    <value>Archive:</value>
  </data>
  <data name="DialogHide.Content" xml:space="preserve">
    <value>Hidden:</value>
  </data>
  <data name="DialogReadonly.Content" xml:space="preserve">
    <value>Read only:</value>
  </data>
  <data name="DialogSystem.Content" xml:space="preserve">
    <value>System:</value>
  </data>
  <data name="DialogTemporary.Content" xml:space="preserve">
    <value>Temporary:</value>
  </data>
  <data name="DialogDividerOthers.Content" xml:space="preserve">
    <value>Others</value>
  </data>
  <data name="DialogIncludedFiles.Content" xml:space="preserve">
    <value>Included files:</value>
  </data>
  <data name="DialogFileContent.Content" xml:space="preserve">
    <value>File content:</value>
  </data>
  <data name="DeleteButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DialogTaskGroupName.Text" xml:space="preserve">
    <value>Task Group Name:</value>
  </data>
  <data name="TaskGroupBox.PlaceholderText" xml:space="preserve">
    <value>Please enter or select</value>
  </data>
  <data name="DialogTaskName.Text" xml:space="preserve">
    <value>Task Name:</value>
  </data>
  <data name="TaskNameBoxPlaceholder.PlaceholderText" xml:space="preserve">
    <value>Please enter the task name</value>
  </data>
  <data name="DialogProcessingRules.Text" xml:space="preserve">
    <value>Processing Rules:</value>
  </data>
  <data name="DialogTaskRulePlaceholder.PlaceholderText" xml:space="preserve">
    <value>Please enter processing rules/regex</value>
  </data>
  <data name="DialogRuleButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Rule example</value>
  </data>
  <data name="DialogFilterButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="DialogOperatingMethod.Text" xml:space="preserve">
    <value>Mode of operation:</value>
  </data>
  <data name="DialogTaskOperateListPlaceholder.PlaceholderText" xml:space="preserve">
    <value>Please Select Operation Mode</value>
  </data>
  <data name="DialogSourceFolder.Text" xml:space="preserve">
    <value>Source folder:</value>
  </data>
  <data name="DialogSourcePlaceholder.PlaceholderText" xml:space="preserve">
    <value>Please select a folder, the default is the desktop</value>
  </data>
  <data name="DialogSourceButton.Content" xml:space="preserve">
    <value>Choice</value>
  </data>
  <data name="DiaalogShortcut.Content" xml:space="preserve">
    <value>Desktop shortcut to the destination folder</value>
  </data>
  <data name="DialogTargetFolder.Text" xml:space="preserve">
    <value>Target Folder:</value>
  </data>
  <data name="DialogTargetPlaceholder.PlaceholderText" xml:space="preserve">
    <value>Choose or enter folder directly</value>
  </data>
  <data name="DialogTargetButton.Content" xml:space="preserve">
    <value>Choice</value>
  </data>
  <data name="DialogTaskEnable.Text" xml:space="preserve">
    <value>Enable:</value>
  </data>
  <data name="DialogTaskGroup.PlaceholderText" xml:space="preserve">
    <value>Choice</value>
  </data>
  <data name="DialogAtStartup.Text" xml:space="preserve">
    <value>EasyTidy Startup:</value>
  </data>
  <data name="DialogAsPlanned.Text" xml:space="preserve">
    <value>According to the plan</value>
  </data>
  <data name="DialogMinute.Text" xml:space="preserve">
    <value>Minute</value>
  </data>
  <data name="DialogHour.Text" xml:space="preserve">
    <value>Hour</value>
  </data>
  <data name="DialogWeek.Text" xml:space="preserve">
    <value>Which day of the week</value>
  </data>
  <data name="DialogDayOfWeekBlock.Text" xml:space="preserve">
    <value>(0=Sun to 6=Sat)</value>
  </data>
  <data name="DialogDayOfMonth.Text" xml:space="preserve">
    <value>Day of the Month</value>
  </data>
  <data name="DialogMonth.Text" xml:space="preserve">
    <value>Month</value>
  </data>
  <data name="DialogExpression.Text" xml:space="preserve">
    <value>CRON expression</value>
  </data>
  <data name="DialogNotice.Text" xml:space="preserve">
    <value>Support CRON expression, and CRON expression has higher priority than the values of the first five items</value>
  </data>
  <data name="DialogFirst.Text" xml:space="preserve">
    <value>It will run when the time unit matches the value below.</value>
  </data>
  <data name="DialogExplanation1.Text" xml:space="preserve">
    <value>(Empty String) Matches any value</value>
  </data>
  <data name="DialogExplanation2.Text" xml:space="preserve">
    <value>Val1, Val2, ..., ValN Match Value List</value>
  </data>
  <data name="DialogExplanation3.Text" xml:space="preserve">
    <value>Match values range from n1 to n2</value>
  </data>
  <data name="DialogExplanation4.Text" xml:space="preserve">
    <value>n1-n2/n3 matches the range n1 to n2 for step n3</value>
  </data>
  <data name="DialogExplanation5.Text" xml:space="preserve">
    <value>Example: Minutes = 15 Hours = 03 Month = 3-10/3 Day of the week = 1,3,5 The tasks will run at 3:15 AM on Mondays, Wednesdays, and Fridays in March, June, and September.</value>
  </data>
  <data name="GeneralSubFloderCard.Description" xml:space="preserve">
    <value>Process subfolders and scan the contents of the folder</value>
  </data>
  <data name="GeneralSubFloderCard.Header" xml:space="preserve">
    <value>Subfolder</value>
  </data>
  <data name="GeneraIgnoreCard.Description" xml:space="preserve">
    <value>Ignore files that are currently in use by other applications</value>
  </data>
  <data name="GeneraIgnoreCard.Header" xml:space="preserve">
    <value>Files in use</value>
  </data>
  <data name="GeneralIrrelevantFilesCard.Description" xml:space="preserve">
    <value>Ignore irrelevant files or folders as well as system file folders</value>
  </data>
  <data name="GeneralIrrelevantFilesCard.Header" xml:space="preserve">
    <value>Irrelevant file</value>
  </data>
  <data name="GeneralEmptyFileCard.Description" xml:space="preserve">
    <value>Ignore files that size = 0 or empty folder</value>
  </data>
  <data name="GeneralEmptyFileCard.Header" xml:space="preserve">
    <value>Empty file</value>
  </data>
  <data name="GeneralHiddenFileCard.Description" xml:space="preserve">
    <value>Ignore hidden files</value>
  </data>
  <data name="GeneralHiddenFileCard.Header" xml:space="preserve">
    <value>Hidden files</value>
  </data>
  <data name="GeneralAppSettings.Header" xml:space="preserve">
    <value>App settings</value>
  </data>
  <data name="GeneralAutoStartCard.Description" xml:space="preserve">
    <value>Start EasyTidy at System Startup</value>
  </data>
  <data name="GeneralAutoStartCard.Header" xml:space="preserve">
    <value>Auto start</value>
  </data>
  <data name="GeneralCheckCard.Description" xml:space="preserve">
    <value>Check for updates at startup</value>
  </data>
  <data name="GeneralCheckCard.Header" xml:space="preserve">
    <value>Check for updates</value>
  </data>
  <data name="GeneralMinimizeCard.Description" xml:space="preserve">
    <value>Minimize to the notification area on startup</value>
  </data>
  <data name="GeneralMinimizeCard.Header" xml:space="preserve">
    <value>Minimize</value>
  </data>
  <data name="GeneralBack.Header" xml:space="preserve">
    <value>Backup/Restore</value>
  </data>
  <data name="GeneralBackCard.Description" xml:space="preserve">
    <value>If necessary, EasyTidy will automatically restart. Check the automatic backup to back up every time the software starts</value>
  </data>
  <data name="GeneralBackCard.Header" xml:space="preserve">
    <value>Backup and restore settings</value>
  </data>
  <data name="GeneralBackButton.Content" xml:space="preserve">
    <value>Backup</value>
  </data>
  <data name="GeneralRestoreButton.Content" xml:space="preserve">
    <value>Restore</value>
  </data>
  <data name="GeneralAutoBackup.Content" xml:space="preserve">
    <value>Auto backup</value>
  </data>
  <data name="GeneralLocationCard.Header" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="GeneralBackupMethod.PlaceholderText" xml:space="preserve">
    <value>Select Backup method</value>
  </data>
  <data name="GeneralAddress.Text" xml:space="preserve">
    <value>Address:</value>
  </data>
  <data name="GeneralUsername.Text" xml:space="preserve">
    <value>Username:</value>
  </data>
  <data name="GeneralPassword.Text" xml:space="preserve">
    <value>Password:</value>
  </data>
  <data name="GeneralBackupInformation.Header" xml:space="preserve">
    <value>Backup information</value>
  </data>
  <data name="GeneralStatus.Text" xml:space="preserve">
    <value>Version:</value>
  </data>
  <data name="GeneralRefresh.Text" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="GeneralFilename.Text" xml:space="preserve">
    <value>Filename:</value>
  </data>
  <data name="GeneralSourceComputer.Text" xml:space="preserve">
    <value>Source Computer:</value>
  </data>
  <data name="GeneralCreatedOn.Text" xml:space="preserve">
    <value>Created on:</value>
  </data>
  <data name="GeneralUseDocumentation.Text" xml:space="preserve">
    <value>Documentation</value>
  </data>
  <data name="GereralReport.Text" xml:space="preserve">
    <value>Report BUG</value>
  </data>
  <data name="GeneralRequestFeature.Text" xml:space="preserve">
    <value>Request Feature</value>
  </data>
  <data name="TaskSettingsPage.ModuleDescription" xml:space="preserve">
    <value>Users can add file processing tasks and professionally configure the execution mode, including selecting automatic execution, one-time execution only, and creating desktop shortcuts and adding backup tasks.</value>
  </data>
  <data name="TaskSettingsPage.ModuleTitle" xml:space="preserve">
    <value>Task Management</value>
  </data>
  <data name="TaskAddTask.Description" xml:space="preserve">
    <value>Add files to a tidy task</value>
  </data>
  <data name="TaskAddTask.Header" xml:space="preserve">
    <value>Add Task</value>
  </data>
  <data name="TaskAddTaskButton.Content" xml:space="preserve">
    <value>Add Task</value>
  </data>
  <data name="TaskDisplay.PlaceholderText" xml:space="preserve">
    <value>Display by group</value>
  </data>
  <data name="TaskDisplay.ToolTipService.ToolTip" xml:space="preserve">
    <value>Filter by group</value>
  </data>
  <data name="TaskListView.Text" xml:space="preserve">
    <value>Task List</value>
  </data>
  <data name="TaskListTaskName.Text" xml:space="preserve">
    <value>Task Name</value>
  </data>
  <data name="TaskListSource.Text" xml:space="preserve">
    <value>Source Folder</value>
  </data>
  <data name="TaskListTarget.Text" xml:space="preserve">
    <value>Target folder</value>
  </data>
  <data name="TaskListShortcuts.Text" xml:space="preserve">
    <value>Desktop shortcuts</value>
  </data>
  <data name="TaskListEnable.Text" xml:space="preserve">
    <value>Enable</value>
  </data>
  <data name="TaskListOperation.Text" xml:space="preserve">
    <value>Operation</value>
  </data>
  <data name="RunButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Execute once</value>
  </data>
  <data name="IsEnableButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Enable</value>
  </data>
  <data name="ThemeMaterial.Header" xml:space="preserve">
    <value>Material</value>
  </data>
  <data name="ThemeMaterial.Description" xml:space="preserve">
    <value>Change the appearance of the backdrop material behind your app. You can choose from mica, acrylic, or transparent options.</value>
  </data>
  <data name="ThemeNone.Content" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="ThemeMica.Content" xml:space="preserve">
    <value>Mica</value>
  </data>
  <data name="ThemeMicaAlt.Content" xml:space="preserve">
    <value>Mica Alt</value>
  </data>
  <data name="ThemeDesktopAcrylic.Content" xml:space="preserve">
    <value>Desktop Acrylic</value>
  </data>
  <data name="ThemeAcrylicBase.Content" xml:space="preserve">
    <value>Acrylic Base</value>
  </data>
  <data name="ThemeAcrylicThin.Content" xml:space="preserve">
    <value>Acrylic Thin</value>
  </data>
  <data name="ThemeTransparent.Content" xml:space="preserve">
    <value>Transparent</value>
  </data>
  <data name="TrayIconStopMonitoring.Text" xml:space="preserve">
    <value>Stop monitoring</value>
  </data>
  <data name="TrayIconExecuteOnce.Text" xml:space="preserve">
    <value>Execute once</value>
  </data>
  <data name="TrayIconPreferences.Text" xml:space="preserve">
    <value>Preferences</value>
  </data>
  <data name="TrayIconScreen.Text" xml:space="preserve">
    <value>Show/Hide</value>
  </data>
  <data name="TrayIconRestart.Text" xml:space="preserve">
    <value>Restart</value>
  </data>
  <data name="TrayIconExit.Text" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="MainTitleBarTheme.ToolTipService.ToolTip" xml:space="preserve">
    <value>Toggle Theme</value>
  </data>
  <data name="MainTitleBarNav.ToolTipService.ToolTip" xml:space="preserve">
    <value>Change Navigation</value>
  </data>
  <data name="MainSuggestBox.PlaceholderText" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SettingsLanguageCard.Header" xml:space="preserve">
    <value>Application language</value>
  </data>
  <data name="SettingsLanguageCard.Description" xml:space="preserve">
    <value>EasyTidy will use OS language by default</value>
  </data>
  <data name="Default_language" xml:space="preserve">
    <value>Windows default</value>
  </data>
  <data name="Arabic_Saudi_Arabia_Language" xml:space="preserve">
    <value>Arabic(Saudi Arabia)</value>
  </data>
  <data name="LanguageRestartInfo.Title" xml:space="preserve">
    <value>Restart EasyTidy for language change to effect</value>
  </data>
  <data name="LanguageRestartInfoButton.Content" xml:space="preserve">
    <value>Restart</value>
  </data>
  <data name="Czech_Language" xml:space="preserve">
    <value>Czech</value>
  </data>
  <data name="German_Language" xml:space="preserve">
    <value>German</value>
  </data>
  <data name="English_Language" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="Spanish_Language" xml:space="preserve">
    <value>Spanish</value>
  </data>
  <data name="Persian_Farsi_Language" xml:space="preserve">
    <value>Persian (Farsi)</value>
  </data>
  <data name="French_Language" xml:space="preserve">
    <value>French</value>
  </data>
  <data name="Hebrew_Israel_Language" xml:space="preserve">
    <value>Hebrew (Israel)</value>
  </data>
  <data name="Hungarian_Language" xml:space="preserve">
    <value>Hungarian</value>
  </data>
  <data name="Italian_Language" xml:space="preserve">
    <value>Italian</value>
  </data>
  <data name="Japanese_Language" xml:space="preserve">
    <value>Japanese</value>
  </data>
  <data name="Korean_Language" xml:space="preserve">
    <value>Korean</value>
  </data>
  <data name="Dutch_Language" xml:space="preserve">
    <value>Dutch</value>
  </data>
  <data name="Polish_Language" xml:space="preserve">
    <value>Polish</value>
  </data>
  <data name="Portuguese_Brazil_Language" xml:space="preserve">
    <value>Portuguese (Brazil)</value>
  </data>
  <data name="Portuguese_Portugal_Language" xml:space="preserve">
    <value>Portuguese (Portugal)</value>
  </data>
  <data name="Russian_Language" xml:space="preserve">
    <value>Russian</value>
  </data>
  <data name="Swedish_Language" xml:space="preserve">
    <value>Swedish</value>
  </data>
  <data name="Turkish_Language" xml:space="preserve">
    <value>Turkish</value>
  </data>
  <data name="Ukrainian_Language" xml:space="preserve">
    <value>Ukrainian</value>
  </data>
  <data name="Chinese_Simplified_Language" xml:space="preserve">
    <value>Chinese (Simplified)</value>
  </data>
  <data name="Chinese_Traditional_Language" xml:space="preserve">
    <value>Chinese (Traditional)</value>
  </data>
  <data name="BackupSuccessTips" xml:space="preserve">
    <value>Backup successful</value>
  </data>
  <data name="BackupFailedTips" xml:space="preserve">
    <value>Backup failed</value>
  </data>
  <data name="BackupSelectionTips" xml:space="preserve">
    <value>Please select the backup type</value>
  </data>
  <data name="DialogRegularTaskRunningTime.Header" xml:space="preserve">
    <value>Interval</value>
  </data>
  <data name="RegularTaskRunningBlock.Text" xml:space="preserve">
    <value>Every:</value>
  </data>
  <data name="FileChangeDelayText.Header" xml:space="preserve">
    <value>Delay(Second)</value>
  </data>
  <data name="MinuteFormatInfo" xml:space="preserve">
    <value>Minute format error</value>
  </data>
  <data name="HourFormatInfo" xml:space="preserve">
    <value>Hour format error</value>
  </data>
  <data name="WeeksFormatInfo" xml:space="preserve">
    <value>Weeks format error</value>
  </data>
  <data name="DateFormatInfo" xml:space="preserve">
    <value>Date format error</value>
  </data>
  <data name="MonthFormatInfo" xml:space="preserve">
    <value>Month format error</value>
  </data>
  <data name="CronExpressionInfo" xml:space="preserve">
    <value>Invalid CRON expression format</value>
  </data>
  <data name="GroupInformationVerification" xml:space="preserve">
    <value>Group name can't be empty</value>
  </data>
  <data name="GroupInformationVerificationAdd" xml:space="preserve">
    <value>Please enter or select a group name</value>
  </data>
  <data name="FilterNameValidation" xml:space="preserve">
    <value>Please enter a filter name</value>
  </data>
  <data name="ValidateDelay" xml:space="preserve">
    <value>Delay can only enter seconds</value>
  </data>
  <data name="CreateShortcutFailedText" xml:space="preserve">
    <value>Failed to create desktop shortcut</value>
  </data>
  <data name="BackupPathText" xml:space="preserve">
    <value>Please select a backup folder path</value>
  </data>
  <data name="BackupStatusText" xml:space="preserve">
    <value>Current setting match</value>
  </data>
  <data name="RegardedExpressionText" xml:space="preserve">
    <value>Regarded as a regular expression</value>
  </data>
  <data name="AllFoldersText" xml:space="preserve">
    <value>All folders</value>
  </data>
  <data name="AllFoldersWithoutOtherMatches" xml:space="preserve">
    <value>All folders without other matches</value>
  </data>
  <data name="AllFoldersStartingWithrobot" xml:space="preserve">
    <value>All folders that start with "robot"</value>
  </data>
  <data name="AllFoldersContainingrobot" xml:space="preserve">
    <value>All folders containing "robot"</value>
  </data>
  <data name="AllFoldersNamed_robot_LocatedUnder" xml:space="preserve">
    <value>All folders named "robot" located in "C:\"</value>
  </data>
  <data name="Use_Or_ToSeparate" xml:space="preserve">
    <value>Use ";" or "|" to separate</value>
  </data>
  <data name="UseToExcludeFoldersStartingWithmy" xml:space="preserve">
    <value>Use "/" to exclude folders starting with "my"</value>
  </data>
  <data name="AllFiles" xml:space="preserve">
    <value>All files</value>
  </data>
  <data name="AllFilesWithNoOtherMatches" xml:space="preserve">
    <value>All other unmatched files</value>
  </data>
  <data name="AllFilesWithTheExtension" xml:space="preserve">
    <value>All files with the extension "jpg"</value>
  </data>
  <data name="AllFilesBeginningWith" xml:space="preserve">
    <value>All files beginning with "penguin"</value>
  </data>
  <data name="AllFilesContains" xml:space="preserve">
    <value>All files containing "penguin"</value>
  </data>
  <data name="All_FilesUnder" xml:space="preserve">
    <value>All "jpg" files under the "Folder"</value>
  </data>
  <data name="UseDelimiter" xml:space="preserve">
    <value>Use ";" or "|" to separate</value>
  </data>
  <data name="UseDelimitersToExclude" xml:space="preserve">
    <value>Use "/" to exclude files starting with "sea"</value>
  </data>
  <data name="CompressedFile" xml:space="preserve">
    <value>Compressed file</value>
  </data>
  <data name="Document" xml:space="preserve">
    <value>Document</value>
  </data>
  <data name="Photograph" xml:space="preserve">
    <value>Pictures</value>
  </data>
  <data name="Music" xml:space="preserve">
    <value>Music</value>
  </data>
  <data name="PresentationAndWorksheet" xml:space="preserve">
    <value>Presentations &amp; Worksheets</value>
  </data>
  <data name="Video" xml:space="preserve">
    <value>Video</value>
  </data>
  <data name="HandlingFolderRules" xml:space="preserve">
    <value>Rules for handling folders</value>
  </data>
  <data name="HandlingRulesForFiles" xml:space="preserve">
    <value>Rules for processing files</value>
  </data>
  <data name="HandlingRulesForCustom" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="ExecutionDate.Title" xml:space="preserve">
    <value>Execution Date</value>
  </data>
  <data name="VerificationSuccessful" xml:space="preserve">
    <value>Validation was successful, execution time of the past {0} times</value>
  </data>
  <data name="VerificationFailed" xml:space="preserve">
    <value>Verification failed, conflict between day of the week and day of the month</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Test" xml:space="preserve">
    <value>Test</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="CurrentVersion" xml:space="preserve">
    <value>Current version v{0}</value>
  </data>
  <data name="CheckingForNewVersion" xml:space="preserve">
    <value>Checking for new version</value>
  </data>
  <data name="FoundANewVersion" xml:space="preserve">
    <value>We found a new version {0} Created at {1} and Published at {2}</value>
  </data>
  <data name="LatestVersion" xml:space="preserve">
    <value>You are using latest version</value>
  </data>
  <data name="ErrorConnection" xml:space="preserve">
    <value>Error Connection</value>
  </data>
  <data name="ReleaseNotes" xml:space="preserve">
    <value>Release Notes</value>
  </data>
  <data name="NewNameAndPath" xml:space="preserve">
    <value>New name and path:</value>
  </data>
  <data name="DateTimeCheatSheet.Text" xml:space="preserve">
    <value>Replace Using File Creation Date &amp; Time</value>
  </data>
  <data name="DateTimeCheatSheet_FullYear" xml:space="preserve">
    <value>Years may be represented by four or five digits, depending on the calendaring system used.</value>
  </data>
  <data name="DateTimeCheatSheet_YearLastTwoDigits" xml:space="preserve">
    <value>Years represented only by the last two digits. For single-digit years, a leading zero has been added.</value>
  </data>
  <data name="DateTimeCheatSheet_YearLastDigit" xml:space="preserve">
    <value>Only the last digit of the year is represented.</value>
  </data>
  <data name="DateTimeCheatSheet_MonthName" xml:space="preserve">
    <value>Month Names.</value>
  </data>
  <data name="DateTimeCheatSheet_MonthNameAbbr" xml:space="preserve">
    <value>Abbreviated names of the months.</value>
  </data>
  <data name="DateTimeCheatSheet_MonthDigitLZero" xml:space="preserve">
    <value>A month as a numeral, leading zero means unit month.</value>
  </data>
  <data name="DateTimeCheatSheet_DayName" xml:space="preserve">
    <value>Names of days of the week.</value>
  </data>
  <data name="DateTimeCheatSheet_MonthDigit" xml:space="preserve">
    <value>Months without a leading zero as a digit for the units place.</value>
  </data>
  <data name="DateTimeCheatSheet_DayNameAbbr" xml:space="preserve">
    <value>Abbreviated names of the days of the week.</value>
  </data>
  <data name="DateTimeCheatSheet_DayDigitLZero" xml:space="preserve">
    <value>A day of the month, written with a numeral, with leading zeros indicating days with only one significant digit.</value>
  </data>
  <data name="DateTimeCheatSheet_DayDigit" xml:space="preserve">
    <value>A day of the month represented as a number, without a leading zero for single-digit days.</value>
  </data>
  <data name="DateTimeCheatSheet_HoursLZero" xml:space="preserve">
    <value>The number of hours with leading zeros in 1-digit hours.</value>
  </data>
  <data name="DateTimeCheatSheet_Hours" xml:space="preserve">
    <value>An hour number without any leading zero for a one-digit hour count.</value>
  </data>
  <data name="DateTimeCheatSheet_MinutesLZero" xml:space="preserve">
    <value>Number of minutes with leading zero (the minutes as a one-digit number).</value>
  </data>
  <data name="DateTimeCheatSheet_Minutes" xml:space="preserve">
    <value>The number of minutes without leading zeros.</value>
  </data>
  <data name="DateTimeCheatSheet_SecondsLZero" xml:space="preserve">
    <value>Seconds leading with a single digit second prepended with a zero.</value>
  </data>
  <data name="DateTimeCheatSheet_Seconds" xml:space="preserve">
    <value>Number of seconds without leading zeros in single digits.</value>
  </data>
  <data name="DateTimeCheatSheet_MilliSeconds3D" xml:space="preserve">
    <value>Millisecond, represented by padding three digits.</value>
  </data>
  <data name="DateTimeCheatSheet_MilliSeconds2D" xml:space="preserve">
    <value>Millisecond count represented by just the first two digits.</value>
  </data>
  <data name="DateTimeCheatSheet_MilliSeconds1D" xml:space="preserve">
    <value>Milliseconds since the epoch expressed as the number of whole milliseconds.</value>
  </data>
  <data name="CounterCheatSheet_Simple" xml:space="preserve">
    <value>A simple counter that can be used at any position in the replacement string.</value>
  </data>
  <data name="CounterCheatSheet_Start" xml:space="preserve">
    <value>Counter with a custom initial value.</value>
  </data>
  <data name="CounterCheatSheet_Increment" xml:space="preserve">
    <value>A counter with a customizable increment value.</value>
  </data>
  <data name="CounterCheatSheet_Padding" xml:space="preserve">
    <value>A counter with a customizable number of leading zeros for padding.</value>
  </data>
  <data name="CounterCheatSheet_Complex" xml:space="preserve">
    <value>Display a counter of multiple custom attributes.</value>
  </data>
  <data name="RandomizerCheatSheet_Alnum" xml:space="preserve">
    <value>Random string of custom length, containing uppercase, lowercase letter and 0-9 digits.</value>
  </data>
  <data name="RandomizerCheatSheet_Alpha" xml:space="preserve">
    <value>Random string with uppercase and lowercase letters, custom length.</value>
  </data>
  <data name="RandomizerCheatSheet_Digit" xml:space="preserve">
    <value>A random string that contains the number 0-9 and has a custom length.</value>
  </data>
  <data name="RandomizerCheatSheet_Uuid" xml:space="preserve">
    <value>A random UUID as defined by the v4 specification.</value>
  </data>
  <data name="CounterCheatSheet_Title.Text" xml:space="preserve">
    <value>Replace with advanced counter grammar</value>
  </data>
  <data name="RandomizerCheatSheet_Title.Text" xml:space="preserve">
    <value>Replace with random value</value>
  </data>
  <data name="GeneralMultipleInstanceCard.Header" xml:space="preserve">
    <value>Multiple instances configuration(Experimental)</value>
  </data>
  <data name="GeneralMultipleInstanceCard.Description" xml:space="preserve">
    <value>Can multiple instances be provisioned</value>
  </data>
  <data name="ExtractText" xml:space="preserve">
    <value>Extract files</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="Downloading" xml:space="preserve">
    <value>Downloading...</value>
  </data>
  <data name="DownloadComplete" xml:space="preserve">
    <value>Download complete!</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="UpdateReady" xml:space="preserve">
    <value>Update Ready</value>
  </data>
  <data name="Update_Ready_Content" xml:space="preserve">
    <value>The update has been downloaded. The installation will begin shortly.</value>
  </data>
  <data name="PreparingToDownload" xml:space="preserve">
    <value>Preparing to download...</value>
  </data>
  <data name="CompressText" xml:space="preserve">
    <value>zip file</value>
  </data>
  <data name="UploadWebDavText" xml:space="preserve">
    <value>Upload to WebDAV</value>
  </data>
  <data name="AppNotificationPayload" xml:space="preserve">
    <value>&lt;toast launch='meetingId=9813'&gt;
    &lt;visual&gt;
        &lt;binding template='ToastGeneric'&gt;
            &lt;text&gt;&lt;/text&gt;
            &lt;text&gt;EasyTidy {0} Started&lt;/text&gt;
            &lt;text&gt;&lt;/text&gt;
        &lt;/binding&gt;
    &lt;/visual&gt;
&lt;/toast&gt;</value>
  </data>
  <data name="RepeatedStartup" xml:space="preserve">
    <value>&lt;toast launch='meetingId=9813'&gt;
    &lt;visual&gt;
        &lt;binding template='ToastGeneric'&gt;
            &lt;text hint-maxLines='1'&gt;EasyTidy has been started, please do not start it again&lt;/text&gt;
        &lt;/binding&gt;
    &lt;/visual&gt;
&lt;/toast&gt;</value>
  </data>
  <data name="ExecutionSuccessfulText" xml:space="preserve">
    <value>Execution Successful</value>
  </data>
  <data name="FilterNameValidation_Text.Text" xml:space="preserve">
    <value>Please enter a filter name</value>
  </data>
  <data name="Settings_General_Header" xml:space="preserve">
    <value>General Settings</value>
  </data>
  <data name="Settings_General_Description" xml:space="preserve">
    <value>Setting up your app and adjusting its operation parameters.</value>
  </data>
  <data name="NavLogsText.Content" xml:space="preserve">
    <value>Operation log</value>
  </data>
  <data name="LogsSettingsCard.Header" xml:space="preserve">
    <value>Logs</value>
  </data>
  <data name="LogsSettingsCard.Description" xml:space="preserve">
    <value>Show the running log of the app.</value>
  </data>
  <data name="RefreshButton.Content" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="LogsGroup.Header" xml:space="preserve">
    <value>Run log</value>
  </data>
  <data name="Verbose" xml:space="preserve">
    <value>Verbose</value>
  </data>
  <data name="Debug" xml:space="preserve">
    <value>Debug</value>
  </data>
  <data name="Information" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Fatal" xml:space="preserve">
    <value>Fatal</value>
  </data>
  <data name="ClearButton.Content" xml:space="preserve">
    <value>Clear logs</value>
  </data>
  <data name="LogsFolder.Content" xml:space="preserve">
    <value>Logs Folder</value>
  </data>
  <data name="AppNotificationPayloadInfo" xml:space="preserve">
    <value>&lt;toast launch='meetingId=9813'&gt;
    &lt;visual&gt;
        &lt;binding template='ToastGeneric'&gt;
            &lt;text&gt;&lt;/text&gt;
            &lt;text&gt;{0}&lt;/text&gt;
            &lt;text&gt;&lt;/text&gt;
        &lt;/binding&gt;
    &lt;/visual&gt;
&lt;/toast&gt;</value>
  </data>
  <data name="GeneralPrefixCard.Header" xml:space="preserve">
    <value>Webdav upload prefix</value>
  </data>
  <data name="GeneralPrefixCard.Description" xml:space="preserve">
    <value>Set the folder to upload files to WebDav</value>
  </data>
  <data name="GroupExecution.Content" xml:space="preserve">
    <value>Group Execution</value>
  </data>
  <data name="EncryptionText" xml:space="preserve">
    <value>File encryption</value>
  </data>
  <data name="GeneralAutomaticRepairCard.Header" xml:space="preserve">
    <value>Automatic repair</value>
  </data>
  <data name="GeneralAutomaticRepairCard.Description" xml:space="preserve">
    <value>Automatically fix errors in the schedule configuration.</value>
  </data>
  <data name="FileChange_Text" xml:space="preserve">
    <value>Whenever the file changes</value>
  </data>
  <data name="RegularTaskRunning_Text" xml:space="preserve">
    <value>Regular execution</value>
  </data>
  <data name="StartupExecution_Text" xml:space="preserve">
    <value>On startup</value>
  </data>
  <data name="ScheduleExecution_Text" xml:space="preserve">
    <value>According to schedule</value>
  </data>
  <data name="PreviewText" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="FilterId.Text" xml:space="preserve">
    <value>Filter number:</value>
  </data>
  <data name="DocumentFlow.Text" xml:space="preserve">
    <value>File flow:</value>
  </data>
  <data name="AutomatedRules.Text" xml:space="preserve">
    <value>Automated rules:</value>
  </data>
  <data name="ListOfFilesToBeMatched.Text" xml:space="preserve">
    <value>List of files to be matched:</value>
  </data>
  <data name="IsFolder.Text" xml:space="preserve">
    <value>Is folder</value>
  </data>
  <data name="File.Text" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="Latency_Text" xml:space="preserve">
    <value>Delay {0} second</value>
  </data>
  <data name="RegularTask_Text" xml:space="preserve">
    <value>Every: Perform every {0} hours and {1} minutes</value>
  </data>
  <data name="MissionSelection.Text" xml:space="preserve">
    <value>Task selection</value>
  </data>
  <data name="Action.Text" xml:space="preserve">
    <value>Action</value>
  </data>
  <data name="Rules.Text" xml:space="preserve">
    <value>Rules</value>
  </data>
  <data name="FileFlowDirection.Text" xml:space="preserve">
    <value>file flow</value>
  </data>
  <data name="AutomaticMode.Text" xml:space="preserve">
    <value>Auto Mode</value>
  </data>
  <data name="HardLinkText" xml:space="preserve">
    <value>Hard link</value>
  </data>
  <data name="SoftLinkText" xml:space="preserve">
    <value>Soft link</value>
  </data>
  <data name="GeneralDirectoryStructureCard.Header" xml:space="preserve">
    <value>Keep Structures</value>
  </data>
  <data name="GeneralDirectoryStructureCard.Description" xml:space="preserve">
    <value>Preserve folder hierarchy when processing files</value>
  </data>
  <data name="BetweenText" xml:space="preserve">
    <value>Between</value>
  </data>
  <data name="NotBetweenText" xml:space="preserve">
    <value>Not between</value>
  </data>
  <data name="RestoreSelectionTips" xml:space="preserve">
    <value>Please select the type to restore</value>
  </data>
  <data name="RestoreFailedTips" xml:space="preserve">
    <value>Recovery failed</value>
  </data>
  <data name="WebDavConnectFailed" xml:space="preserve">
    <value>WebDAV connection failed</value>
  </data>
  <data name="RestoreSuccessTips" xml:space="preserve">
    <value>Recovery successful</value>
  </data>
  <data name="BackupList" xml:space="preserve">
    <value>Backup list</value>
  </data>
  <data name="FileSnapshotText" xml:space="preserve">
    <value>File snapshot</value>
  </data>
  <data name="FileCountText" xml:space="preserve">
    <value>{0} files in</value>
  </data>
  <data name="FolderCountText" xml:space="preserve">
    <value>{0} folders</value>
  </data>
  <data name="GeneratedText" xml:space="preserve">
    <value>Generated {0}</value>
  </data>
  <data name="RuleInfoText" xml:space="preserve">
    <value>Rule: {0}</value>
  </data>
  <data name="ValidRuleText" xml:space="preserve">
    <value>Rule verification failed</value>
  </data>
  <data name="VaildFailedText" xml:space="preserve">
    <value>Group name or task name or rule is empty</value>
  </data>
  <data name="ShutdownExecutionCard.Header" xml:space="preserve">
    <value>Execute on shutdown</value>
  </data>
  <data name="ShutdownExecutionCard.Description" xml:space="preserve">
    <value>Execute Tasks When Shutting Down Require EasyTidy To Start</value>
  </data>
  <data name="SevenZipText" xml:space="preserve">
    <value>7zip</value>
  </data>
  <data name="AESText" xml:space="preserve">
    <value>AES-256 with PBKDF2-derived key</value>
  </data>
  <data name="DialogAtShutdown.Text" xml:space="preserve">
    <value>When closed：</value>
  </data>
</root>