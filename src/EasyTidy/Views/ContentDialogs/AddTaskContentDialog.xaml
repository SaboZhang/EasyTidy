<?xml version="1.0" encoding="utf-8"?>
<ContentDialog
    x:Class="EasyTidy.Views.ContentDialogs.AddTaskContentDialog"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:EasyTidy.Views.ContentDialogs"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:model="using:EasyTidy.Model"
    xmlns:wuc="using:WinUICommunity" 
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core" 
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    CornerRadius="{ThemeResource OverlayCornerRadius}"
    DefaultButton="Primary">

    <ContentDialog.Resources>
        <DataTemplate x:Key="ValidationTemplate"
                  x:DataType="x:String">
            <TextBlock Foreground="{ThemeResource SystemFillColorCriticalBrush}"
                   Text="{x:Bind}"/>
        </DataTemplate>
    </ContentDialog.Resources>
    
    <StackPanel>
        <StackPanel x:Name="TaskGroupPanel"
                    Orientation="Horizontal"
                    Spacing="8"
                    Margin="0,10,0,0">
            <TextBlock x:Name="TaskGroupName"
                       x:Uid="DialogTaskGroupName"
                       Margin="0,5,0,0"
                       Width="110"
                       TextWrapping="Wrap"/>
            <TextBox x:Name="TaskGroupNameBox" 
                     Text="{x:Bind ViewModel.GroupTextName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     Width="210"
                     Margin="6,0,0,0"
                     x:Uid="TaskGroupBox"
                     wuc:Validation.ErrorTemplate="{StaticResource ValidationTemplate}"
                     wuc:Validation.ValidationPropertyName="GroupName"
                     wuc:Validation.ValidationProvider="{x:Bind}"
                     Style="{StaticResource ValidatingTextBoxStyle}"/>
            <ComboBox x:Name="TaskGroupNameComboBox"
                      x:Uid="DialogTaskGroup"
                      MaxWidth="100"
                      IsEditable="True"
                      ItemsSource="{x:Bind ViewModel.GroupList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      SelectedItem="{x:Bind ViewModel.SelectedTaskGroupName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      SelectedIndex="{x:Bind ViewModel.SelectedGroupIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <i:Interaction.Behaviors>
                    <ic:EventTriggerBehavior EventName="SelectionChanged">
                        <ic:EventTriggerBehavior.Actions>
                            <ic:InvokeCommandAction Command="{x:Bind ViewModel.GroupSelectionChangedCommand}"/>
                        </ic:EventTriggerBehavior.Actions>
                    </ic:EventTriggerBehavior>
                </i:Interaction.Behaviors>
            </ComboBox>
        </StackPanel>
        <StackPanel x:Name="TaskNamePanel"
                    Orientation="Horizontal"
                    Spacing="8"
                    Margin="0,10,0,0">
            <TextBlock x:Name="TaskTitle"
                       x:Uid="DialogTaskName"
                       Margin="0,5,0,0"
                       Width="110"
                       TextWrapping="Wrap"/>
            <TextBox x:Name="TaskNameBox"
                     x:Uid="TaskNameBoxPlaceholder"
                     Margin="6,0,0,0"
                     Width="210"
                     Text="{x:Bind TaskName, Mode=TwoWay}"/>
        </StackPanel>
        <StackPanel x:Name="TaskRulePanel"
                    Orientation="Horizontal"
                    Spacing="8"
                    Margin="0,20,0,0">
            <TextBlock x:Name="TaskRuleTitle"
                       x:Uid="DialogProcessingRules"
                       Margin="0,5,0,0"
                       Width="110"
                       TextWrapping="Wrap"/>
            <TextBox x:Name="TaskRuleBox"
                     x:Uid="DialogTaskRulePlaceholder"
                     Margin="6,0,0,0"
                     Width="210"
                     Text="{x:Bind TaskRule, Mode=TwoWay}"/>
            <Button x:Name="RuleButton"
                    Width="52"
                    Height="32"
                    x:Uid="DialogRuleButton">
                <Button.Content>
                    <Image Source="/Assets/Fluent/rule.png" Stretch="Uniform"/>
                </Button.Content>
                <Button.Flyout>
                    <MenuFlyout x:Name="RuleFlyout"/>
                </Button.Flyout>
            </Button>
            <Button x:Name="FilterButton"
                    Width="52"
                    Height="32"
                    x:Uid="DialogFilterButton"
                    Click="FilterButton_Click">
                <Button.Content>
                    <Image Source="/Assets/Fluent/filter.png" Stretch="Uniform"/>
                </Button.Content>
                <Button.Resources>
                    <TeachingTip x:Name="FilterButtonTeachingTip"
                                 PreferredPlacement="Bottom"
                                 Target="{x:Bind FilterButton}"
                                 CloseButtonClick="FilterButtonTeachingTip_CloseButtonClick">
                        <TeachingTip.HeroContent>
                            <ListView x:Name="DialogFilterListView"
                                      MaxHeight="320"
                                      ItemsSource="{x:Bind ViewModel.FilterListACV, Mode=TwoWay}">
                                <ListView.ItemTemplate>
                                    <DataTemplate x:DataType="model:FilterTable">
                                        <TextBlock Text="{x:Bind FilterName}"/>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </TeachingTip.HeroContent>
                    </TeachingTip>
                </Button.Resources>
            </Button>
        </StackPanel>
        <StackPanel x:Name="TaskOperatePanel"
                    Orientation="Horizontal"
                    Spacing="8"
                    Margin="0,20,0,0">
            <TextBlock x:Name="TaskOperateTitle"
                       x:Uid="DialogOperatingMethod"
                       Margin="0,5,0,0"
                       Width="110"
                       TextWrapping="Wrap"/>
            <ComboBox x:Name="TaskOperateList"
                      ItemsSource="{x:Bind ViewModel.OperationModes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      SelectedItem="{x:Bind ViewModel.SelectedOperationMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      x:Uid="DialogTaskOperateListPlaceholder"
                      Margin="6,0,0,0"
                      Width="210"
                      SelectionChanged="TaskOperateList_SelectionChanged">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Converter={StaticResource EnumDisplayNameConverter}}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </StackPanel>
        <StackPanel x:Name="TaskSourcePanel"
                    Orientation="Horizontal"
                    Spacing="8"
                    Margin="0,20,0,0">
            <TextBlock x:Name="TaskSourceTitle"
                       x:Uid="DialogSourceFolder"
                       Margin="0,5,0,0"
                       Width="110"
                       TextWrapping="Wrap"/>
            <TextBox x:Name="Source"
                     x:Uid="DialogSourcePlaceholder"
                     Margin="6,0,0,0"
                     Width="210"
                     Text="{x:Bind ViewModel.TaskSource, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     IsEnabled="False"/>
            <Button x:Name="SourceButton"
                    x:Uid="DialogSourceButton"
                    Command="{x:Bind ViewModel.SelectSourcePathCommand}"/>
        </StackPanel>
        <StackPanel x:Name="TaskTargetPanel"
                    Orientation="Horizontal"
                    Spacing="8"
                    Margin="0,20,0,0">
            <TextBlock x:Name="TaskTargetTitle"
                       x:Uid="DialogTargetFolder"
                       Margin="0,5,0,0"
                       Width="110"
                       TextWrapping="Wrap"/>
            <TextBox x:Name="Target"
                     x:Uid="DialogTargetPlaceholder"
                     Width="210"
                     Margin="6,0,0,0"
                     Text="{x:Bind ViewModel.TaskTarget, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <Button x:Name="TargetButton"
                    x:Uid="DialogTargetButton"
                    Command="{x:Bind ViewModel.SelectTargetPathCommand}"/>
        </StackPanel>
        <StackPanel x:Name="TaskEnablePanel"
                    Orientation="Horizontal"
                    Spacing="8"
                    Margin="0,20,0,0">
            <TextBlock x:Name="TaskEnableTitle"
                       x:Uid="DialogTaskEnable"
                       Margin="0,8,14,0"
                       Width="100"/>
            <ToggleSwitch x:Name="EnableSwitch"
                          IsOn="{x:Bind EnabledFlag, Mode=TwoWay}"/>
            <CheckBox x:Name="CreateShortcut"
                      x:Uid="DiaalogShortcut"
                      Margin="-64,0,0,0"
                      IsChecked="{x:Bind Shortcut, Mode=TwoWay}"></CheckBox>
        </StackPanel>
    </StackPanel>
</ContentDialog>
