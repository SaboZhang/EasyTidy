<?xml version="1.0" encoding="utf-8"?>
<ContentDialog
    x:Class="EasyTidy.Views.ContentDialogs.AddFilterContentDialog"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:EasyTidy.Views.ContentDialogs"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="using:Microsoft.Xaml.Interactivity" 
    xmlns:ui="using:CommunityToolkit.WinUI" 
    xmlns:etc="using:EasyTidy.Views.UserControls"
    mc:Ignorable="d"
    CornerRadius="{ThemeResource OverlayCornerRadius}"
    DefaultButton="Primary">

    <ScrollView VerticalScrollBarVisibility="Hidden">
        <StackPanel>
            <StackPanel Orientation="Horizontal"
                        Spacing="8">
                <TextBlock x:Uid="DialogFilterNameBlock"
                           Margin="0,8,0,0"/>
                <TextBox x:Name="NameTextBox"
                         Margin="38,0,0,0"
                         MinWidth="210"
                         LostFocus="NameTextBox_LostFocus"
                         Text="{x:Bind FilterName, Mode=TwoWay}"/>
            </StackPanel>
            <TextBlock x:Name="NameTextBoxError"
                       Margin="130,0,0,0"
                       VerticalAlignment="Center"
                       Foreground="{ThemeResource SystemFillColorCriticalBrush}"
                       Visibility="Collapsed"/>
            <etc:Divider x:Uid="DividerAttribute"
                         HorizontalContentAlignment="Left"/>
            <StackPanel x:Name="SizePropertyStackPanel"
                        Orientation="Horizontal"
                        Spacing="8"
                        Margin="0,-10,0,0">
                <CheckBox x:Uid="DialogFileSize"
                          IsChecked="{x:Bind IsSizeSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <ComboBox x:Name="SizeComboBox"
                          Width="78"
                          IsEnabled="False"
                          ItemsSource="{x:Bind ViewModel.ComparisonResults, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{x:Bind SizeOperator, Mode=TwoWay}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Converter={StaticResource EnumDisplayNameConverter}}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <TextBox x:Name="SizeTextBox"
                         Width="120"
                         IsEnabled="False"
                         InputScope="Number"
                         Text="{x:Bind SizeValue, Mode=TwoWay}"/>
                <ComboBox x:Name="SizeUnitComboBox"
                          Width="78"
                          IsEnabled="False"
                          ItemsSource="{x:Bind ViewModel.SizeUnits, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{x:Bind SizeUnit, Mode=TwoWay}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Converter={StaticResource EnumDisplayNameConverter}}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <Button x:Name="NoticeButton"
                        Width="28"
                        Height="32"
                        Content="&#xE946;"
                        Margin="-8,0,0,0"
                        Padding="0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        FontFamily="{ThemeResource SymbolThemeFontFamily}">
                    <Button.Flyout>
                        <Flyout>
                            <StackPanel>
                                <TextBlock Text="介于：指的是选择那些位于两个指定值之间的项（包括这两个值本身），即大于或者等于第一个值且小于或者等于第二个值" TextWrapping="Wrap"/>
                                <TextBlock Text="不介于：指的是选择那些不在这两个指定值之间的项，小于第一个值，或者大于第二个值" TextWrapping="Wrap"/>
                                <TextBlock Text="选择「介于」或者「不介于」的条件时两个值之间用英文逗号分割，最小值在前，最大值在后" TextWrapping="Wrap"/>
                            </StackPanel>
                        </Flyout>
                    </Button.Flyout>
                </Button>
            </StackPanel>
            <StackPanel x:Name="CreatePropertyStackPanel"
                        Orientation="Horizontal"
                        Spacing="8"
                        Margin="0,10,0,0">
                <CheckBox x:Uid="DialogCreationTime"
                          IsChecked="{x:Bind IsCreateDateSelected, Mode=TwoWay}"/>
                <ComboBox x:Name="CreateDateComboBox"
                          Width="78"
                          IsEnabled="False"
                          ItemsSource="{x:Bind ViewModel.ComparisonResults, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{x:Bind CreateDateOperator, Mode=TwoWay}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Converter={StaticResource EnumDisplayNameConverter}}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <TextBox x:Name="CreateDateTextBox"
                         Width="120"
                         InputScope="Number"
                         IsEnabled="False"
                         Text="{x:Bind CreateDateValue, Mode=TwoWay}"/>
                <ComboBox x:Name="CreateDateUnitComboBox"
                          Width="78"
                          IsEnabled="False"
                          ItemsSource="{x:Bind ViewModel.DateUnits, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{x:Bind CreateDateUnit, Mode=TwoWay}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Converter={StaticResource EnumDisplayNameConverter}}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </StackPanel>
            <StackPanel x:Name="EditPropertyStackPanel"
                        Orientation="Horizontal"
                        Spacing="8"
                        Margin="0,10,0,0">
                <CheckBox x:Uid="DialogModifyTime"
                          IsChecked="{x:Bind IsEditDateSelected, Mode=TwoWay}"/>
                <ComboBox x:Name="EditDateComboBox"
                          Width="78"
                          IsEnabled="False"
                          ItemsSource="{x:Bind ViewModel.ComparisonResults, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{x:Bind EditDateOperator, Mode=TwoWay}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Converter={StaticResource EnumDisplayNameConverter}}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <TextBox x:Name="EditDateTextBox"
                         Width="120"
                         InputScope="Number"
                         IsEnabled="False"
                         Text="{x:Bind EditDateValue, Mode=TwoWay}"/>
                <ComboBox x:Name="EditDateUnitComboBox"
                          Width="78"
                          IsEnabled="False"
                          ItemsSource="{x:Bind ViewModel.DateUnits, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{x:Bind EditDateUnit, Mode=TwoWay}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Converter={StaticResource EnumDisplayNameConverter}}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </StackPanel>
            <StackPanel x:Name="VisitPropertyStackPanel"
                        Orientation="Horizontal"
                        Spacing="8"
                        Margin="0,10,0,0">
                <CheckBox x:Uid="DialogVisitTime"
                          IsChecked="{x:Bind IsVisitDateSelected, Mode=TwoWay}"/>
                <ComboBox x:Name="VisitDateComboBox"
                          Width="78"
                          IsEnabled="False"
                          ItemsSource="{x:Bind ViewModel.ComparisonResults, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{x:Bind VisitDateOperator, Mode=TwoWay}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Converter={StaticResource EnumDisplayNameConverter}}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <TextBox x:Name="VisitDateTextBox"
                         Width="120"
                         InputScope="Number"
                         IsEnabled="False"
                         Text="{x:Bind VisitDateValue, Mode=TwoWay}"/>
                <ComboBox x:Name="VisitDateUnitComboBox"
                          Width="78"
                          IsEnabled="False"
                          ItemsSource="{x:Bind ViewModel.DateUnits, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{x:Bind VisitDateUnit, Mode=TwoWay}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Converter={StaticResource EnumDisplayNameConverter}}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </StackPanel>
            <etc:Divider x:Uid="DialogDividerCharacteristics"
                         HorizontalContentAlignment="Left"/>
            <StackPanel x:Name="ArchiveStackPanel"
                        Orientation="Horizontal"
                        Spacing="8"
                        Margin="0,-10,0,0">
                <CheckBox x:Uid="DialogArchive"
                          IsChecked="{x:Bind IsArchiveSelected, Mode=TwoWay}"/>
                <ComboBox x:Name="ArchiveComboBox"
                          Width="78"
                          IsEnabled="False"
                          ItemsSource="{x:Bind ViewModel.YesOrNos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{x:Bind ArchiveValue, Mode=TwoWay}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Converter={StaticResource EnumDisplayNameConverter}}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <CheckBox x:Uid="DialogHide"
                          IsChecked="{x:Bind IsHiddenSelected, Mode=TwoWay}"/>
                <ComboBox x:Name="HidenComboBox"
                          Width="78"
                          IsEnabled="False"
                          ItemsSource="{x:Bind ViewModel.YesOrNos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{x:Bind HiddenValue, Mode=TwoWay}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Converter={StaticResource EnumDisplayNameConverter}}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </StackPanel>
            <StackPanel x:Name="RadyOnlyStackPanel"
                        Orientation="Horizontal"
                        Spacing="8"
                        Margin="0,10,0,0">
                <CheckBox x:Uid="DialogReadonly"
                          IsChecked="{x:Bind IsReadOnlySelected, Mode=TwoWay}"/>
                <ComboBox x:Name="RadyOnlyComboBox"
                          Width="78"
                          IsEnabled="False"
                          ItemsSource="{x:Bind ViewModel.YesOrNos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{x:Bind ReadOnlyValue, Mode=TwoWay}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Converter={StaticResource EnumDisplayNameConverter}}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <CheckBox x:Uid="DialogSystem"
                          IsChecked="{x:Bind IsSystemSelected, Mode=TwoWay}"/>
                <ComboBox x:Name="SystemComboBox"
                          Width="78"
                          IsEnabled="False"
                          ItemsSource="{x:Bind ViewModel.YesOrNos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{x:Bind SystemValue, Mode=TwoWay}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Converter={StaticResource EnumDisplayNameConverter}}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </StackPanel>
            <StackPanel x:Name="TempStackPanel"
                        Orientation="Horizontal"
                        Spacing="8"
                        Margin="0,10,0,0">
                <CheckBox x:Uid="DialogTemporary"
                          IsChecked="{x:Bind IsTempSelected, Mode=TwoWay}"/>
                <ComboBox x:Name="TempComboBox"
                          Width="78"
                          IsEnabled="False"
                          ItemsSource="{x:Bind ViewModel.YesOrNos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{x:Bind TempValue, Mode=TwoWay}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Converter={StaticResource EnumDisplayNameConverter}}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </StackPanel>
            <etc:Divider x:Uid="DialogDividerOthers"
                         HorizontalContentAlignment="Left"/>
            <StackPanel x:Name="OtherStackPanel"
                        Orientation="Horizontal"
                        Spacing="8"
                        Margin="0,-10,0,0">
                <CheckBox x:Uid="DialogIncludedFiles"
                          IsChecked="{x:Bind IsIncludeSelected, Mode=TwoWay}"/>
                <TextBox x:Name="OtherTextBox"
                         Width="120"
                         IsEnabled="False"
                         Text="{x:Bind IncludedFiles, Mode=TwoWay}"/>
            </StackPanel>
            <StackPanel x:Name="ContentStackPanel"
                        Orientation="Horizontal"
                        Spacing="8"
                        Margin="0,10,0,0">
                <CheckBox x:Uid="DialogFileContent"
                          IsChecked="{x:Bind IsContentSelected, Mode=TwoWay}"/>
                <ComboBox x:Name="ContentComboBox"
                          Width="352"
                          IsEnabled="False"
                          ItemsSource="{x:Bind ViewModel.ContentOperators, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{x:Bind ContentOperator, Mode=TwoWay}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Converter={StaticResource EnumDisplayNameConverter}}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </StackPanel>
            <TextBox x:Name="ContentTextBox"
                     Width="480"
                     Margin="0,10,0,0"
                     IsEnabled="False"
                     HorizontalAlignment="Left"
                     Text="{x:Bind ContentValue, Mode=TwoWay}"/>
        </StackPanel>
    </ScrollView>
</ContentDialog>
