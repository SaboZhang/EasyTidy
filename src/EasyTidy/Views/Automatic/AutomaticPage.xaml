<?xml version="1.0" encoding="utf-8"?>
<Page
    x:Class="EasyTidy.Views.AutomaticPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:EasyTidy.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:wuc="using:WinUICommunity"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:model="using:EasyTidy.Model"
    mc:Ignorable="d">

    <i:Interaction.Behaviors>
        <ic:EventTriggerBehavior EventName="Loaded">
            <ic:EventTriggerBehavior.Actions>
                <ic:InvokeCommandAction Command="{x:Bind ViewModel.PageLoadedCommand}"/>
            </ic:EventTriggerBehavior.Actions>
        </ic:EventTriggerBehavior>
    </i:Interaction.Behaviors>

    <StackPanel x:Name="Root">
        <StackPanel x:Name="Growl"
                    MinWidth="340"
                    wuc:Growl.GrowlParent="True"/>
        <wuc:SettingsPageControl
            x:Name="SettingsControl"
            x:Uid="SettingsPageControl"
            ModuleImageSource="ms-appx:///Assets/Modules/Auto.png">
            <wuc:SettingsPageControl.ModuleContent>
                <StackPanel wuc:PanelAttach.ChildrenTransitions="Default"
                            Orientation="Vertical">
                    <wuc:SimpleSettingsGroup Margin="0,-32,0,0"
                                             x:Uid="AutoAnalysisGlobal">
                        <wuc:SettingsCard x:Uid="FileChangeCard">
                            <wuc:SettingsCard.HeaderIcon>
                                <FontIcon Glyph="&#xF0E4;"/>
                            </wuc:SettingsCard.HeaderIcon>
                            <StackPanel Orientation="Horizontal"
                                        Spacing="8">
                                <ToggleSwitch x:Name="FileChange"
                                              IsOn="{x:Bind ViewModel.IsFileChange, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock x:Uid="FileChangeDelay"
                                           Margin="20,8,0,0"/>
                                <NumberBox Value="{x:Bind ViewModel.DelaySeconds, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                           IsEnabled="{x:Bind ViewModel.IsFileChange, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock x:Uid="FileChangeSecond"
                                           Margin="0,8,0,0"/>
                            </StackPanel>
                        </wuc:SettingsCard>
                        <wuc:SettingsCard x:Uid="StartupExecutionCard">
                            <wuc:SettingsCard.HeaderIcon>
                                <FontIcon Glyph="&#xE7E8;"/>
                            </wuc:SettingsCard.HeaderIcon>
                            <ToggleSwitch x:Name="StartupExecution"
                                          IsOn="{x:Bind ViewModel.IsStartupExecution, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </wuc:SettingsCard>
                        <wuc:SettingsCard x:Uid="RegularTaskRunningCard">
                            <wuc:SettingsCard.HeaderIcon>
                                <FontIcon Glyph="&#xE916;"/>
                            </wuc:SettingsCard.HeaderIcon>
                            <StackPanel Orientation="Horizontal"
                                        Spacing="8">
                                <ToggleSwitch x:Name="RegularTaskRunning"
                                              IsOn="{x:Bind ViewModel.RegularTaskRunning, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock x:Uid="RegularTaskRunningBlock"
                                           Margin="20,8,0,0"/>
                                <TimePicker ClockIdentifier="24HourClock"
                                            IsEnabled="{x:Bind ViewModel.RegularTaskRunning, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            SelectedTime="{x:Bind ViewModel.SelectTaskTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                        </wuc:SettingsCard>
                        <wuc:SettingsCard x:Uid="ScheduledExecutionCard">
                            <wuc:SettingsCard.HeaderIcon>
                                <FontIcon Glyph="&#xED28;"/>
                            </wuc:SettingsCard.HeaderIcon>
                            <StackPanel Orientation="Horizontal"
                                        Spacing="8">
                                <ToggleSwitch x:Name="OnScheduleExecutionSwitch"
                                              IsOn="{x:Bind ViewModel.OnScheduleExecution, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <Button x:Uid="ConfigurationButton"
                                        Command="{x:Bind ViewModel.PlanExecutionCommand}"
                                        IsEnabled="{x:Bind ViewModel.OnScheduleExecution, Mode=OneWay}"/>
                            </StackPanel>
                        </wuc:SettingsCard>

                    </wuc:SimpleSettingsGroup>
                    <wuc:SimpleSettingsGroup x:Uid="TaskAssociation">
                        <wuc:SettingsExpander x:Uid="ConfigurationTask"
                                              HeaderIcon="{wuc:FontIcon FontFamily={StaticResource SymbolThemeFontFamily}, Glyph=&#xEA65;}"
                                              IsExpanded="True">
                            <wuc:SettingsExpander.Items>
                                <wuc:SettingsCard x:Uid="TaskSelection">
                                    <StackPanel Orientation="Horizontal"
                                                Spacing="8">
                                        <Button x:Name="GroupButton"
                                                x:Uid="TaskButton"
                                                Command="{x:Bind ViewModel.SelectTaskCommand}"
                                                CommandParameter="{Binding ElementName=GroupButton}">
                                            <Button.Resources>
                                                <TeachingTip x:Name="GroupTaskSelect"
                                                             x:Uid="TaskGroup"
                                                             Target="{x:Bind GroupButton}"
                                                             IsOpen="{x:Bind ViewModel.GroupGlobalIsOpen, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                             PreferredPlacement="Bottom"
                                                             CloseButtonClick="GroupTaskSelect_CloseButtonClick">
                                                    <TeachingTip.HeroContent>
                                                        <ListView x:Name="GroupTaskListView"
                                                                  SelectionMode="Multiple"
                                                                  MaxHeight="320"
                                                                  ItemsSource="{x:Bind ViewModel.TaskGroupListACV, Mode=TwoWay}">
                                                            <ListView.ItemTemplate>
                                                                <DataTemplate x:DataType="model:TaskGroupTable">
                                                                    <TextBlock Text="{x:Bind GroupName}"/>
                                                                </DataTemplate>
                                                            </ListView.ItemTemplate>
                                                        </ListView>
                                                    </TeachingTip.HeroContent>
                                                </TeachingTip>
                                            </Button.Resources>
                                        </Button>
                                        <Button x:Name="SelectButton"
                                                x:Uid="SingleTask"
                                                Command="{x:Bind ViewModel.SelectTaskCommand}"
                                                CommandParameter="{Binding ElementName=SelectButton}">
                                            <Button.Resources>
                                                <TeachingTip x:Name="TaskSelect"
                                                             x:Uid="SelectTask"
                                                             Target="{x:Bind SelectButton}"
                                                             IsOpen="{x:Bind ViewModel.GlobalIsOpen, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                             PreferredPlacement="Bottom"
                                                             CloseButtonClick="TaskSelect_CloseButtonClick">
                                                    <TeachingTip.HeroContent>
                                                        <ListView x:Name="TaskListView"
                                                                  SelectionMode="Multiple"
                                                                  MaxHeight="320"
                                                                  ItemsSource="{x:Bind ViewModel.TaskListACV, Mode=TwoWay}">
                                                            <ListView.ItemTemplate>
                                                                <DataTemplate x:DataType="model:FileExplorerTable">
                                                                    <TextBlock Text="{x:Bind TaskName}"/>
                                                                </DataTemplate>
                                                            </ListView.ItemTemplate>
                                                        </ListView>
                                                    </TeachingTip.HeroContent>
                                                </TeachingTip>
                                            </Button.Resources>
                                        </Button>

                                        <CheckBox x:Name="FeatureIndependentConfigFlagCheckBox"
                                                  IsChecked="{x:Bind ViewModel.FeatureIndependentConfigFlag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                  x:Uid="Separate"/>
                                        <Button x:Uid="Customize"
                                                Command="{x:Bind ViewModel.CustomConfigCommand}"
                                                IsEnabled="{x:Bind ViewModel.FeatureIndependentConfigFlag, Mode=OneWay}"/>
                                    </StackPanel>
                                </wuc:SettingsCard>
                            </wuc:SettingsExpander.Items>

                        </wuc:SettingsExpander>

                    </wuc:SimpleSettingsGroup>
                    <StackPanel Orientation="Horizontal"
                                Spacing="8"
                                HorizontalAlignment="Right"
                                Visibility="{x:Bind ViewModel.NotFeatureIndependentConfigFlag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,
                        Converter={StaticResource BoolToVisibilityConverter}}">
                        <Button x:Uid="ResetButton"
                                HorizontalAlignment="Center"
                                Margin="0,10,0,0"/>
                        <Button x:Uid="SaveButton"
                                HorizontalAlignment="Center"
                                Margin="0,10,0,0"
                                Command="{x:Bind ViewModel.SaveTaskConfigCommand}"/>
                    </StackPanel>
                </StackPanel>
            </wuc:SettingsPageControl.ModuleContent>

        </wuc:SettingsPageControl>
        <wuc:LoadingIndicator x:Name="Load"
                              Mode="Arcs"
                              IsActive="{x:Bind ViewModel.IsActive, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
    </StackPanel>


</Page>
